name: Modelops deploy

on:
  push:                # se dispara ante el "push" (ante cualquier cambio de dataset, datos de entrenamiento, cambio en el model ya entrenado, etc.
    branches: [ main ]
  pull_request:
    branches: [ main ] # otra manera de mover el código (este es cuando se trabaja cpo equipos.)

jobs:        # conjunto de instrucciones que queremos que haga.
  build:     # crea un máquina virtual
    runs-on: ubuntu-latest            # la máquina virtual se le asignaría la última versión del SO ubuntu.
    container: adsoft/aiops:latest    # se levanta un docker configurado con las herramientas que vamos a utilizar. 

    steps:
    - uses: actions/checkout@v2
    - name: hello-world
      run: echo “hello world workflows …”
    - name: run model 
      run: python linear-model.py
    - name: docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
        
    - name: Download and run the Docker base image
      run: docker run -d --name serving_base tensorflow/serving

    - name: copy model to the Docker image
      run: docker cp ${{secrets.MODEL_NAME}} serving_base:/models/${{secrets.MODEL_NAME}}
      
    - name: Build the custom Docker image
      run: docker commit --change "ENV MODEL_NAME ${{secrets.MODEL_NAME}}" serving_base ${{secrets.DOCKER_USER}}/tensorflow-${{secrets.MODEL_NAME}}:${{ github.sha }}
  
    - name: Docker Push
      run: docker push ${{secrets.DOCKER_USER}}/tensorflow-${{secrets.MODEL_NAME}}:${{ github.sha }}


